/*------------------------------------------------*/

for (begin; condition; step) {
    // ... 반복문 본문 ...
}

/*------------------------------------------------*/

for (let i = 0; i < 3; i++) { // 0, 1, 2가 출력
    alert(i);
}

/*------------------------------------------------*/

//  for문 구성 요소		
//  begin	    i = 0	    반복문에 진입할 때 단 한 번 실행.
//  condition	i < 3	    반복마다 해당 조건이 확인. false이면 반복문을 멈춤.
//  body	    alert(i)	condition이 truthy일 동안 계속해서 실행.
//  step	    i++	        각 반복의 body가 실행된 이후에 실행.

// begin을 실행함
// → (condition이 truthy이면 → body를 실행한 후, step을 실행함)
// → (condition이 truthy이면 → body를 실행한 후, step을 실행함)
// → (condition이 truthy이면 → body를 실행한 후, step을 실행함)
// → ...

/*------------------------------------------------*/

// for (let i = 0; i < 3; i++) alert(i)

// begin을 실행함
let i = 0
// condition이 truthy이면 → body를 실행한 후, step을 실행함
if (i < 3) { alert(i); i++ }
// condition이 truthy이면 → body를 실행한 후, step을 실행함
if (i < 3) { alert(i); i++ }
// condition이 truthy이면 → body를 실행한 후, step을 실행함
if (i < 3) { alert(i); i++ }
// i == 3이므로 반복문 종료

/*------------------------------------------------*/

// ‘인라인’ 변수 선언 : ‘카운터’ 변수 i를 반복문 안에서 선언
for (let i = 0; i < 3; i++) {
    alert(i); // 0, 1, 2
}
alert(i); // Error: i is not defined

/*------------------------------------------------*/

let j = 0;

for (j = 0; i < 3; j++) { // 기존에 정의된 변수 사용
  alert(j); // 0, 1, 2
}

alert(j); // 3, 반복문 밖에서 선언한 변수이므로 사용할 수 있음

/*------------------------------------------------*/

let k = 0; // k를 선언하고 값도 할당하였습니다.

// 반복문이 시작될 때 아무것도 할 필요가 없으면 begin을 생략하는 것이 가능
for (; k < 3; k++) { // 'begin'이 필요하지 않기 때문에 생략
  alert( k ); // 0, 1, 2
}

/*------------------------------------------------*/

let m = 0;

// step 역시 생략 가능
for (; m < 3;) {
  alert( m++ );
}

/*------------------------------------------------*/

// 모든 구성 요소를 생략 시 → 무한 반복문 생성
for (;;) {
    // 끊임 없이 본문이 실행
}

/*------------------------------------------------*/

let sum = 0;

// (*)로 표시한 줄에 있는 break는 사용자가 아무것도 입력하지 않거나 Cancel버튼을 눌렀을 때 활성화
// 이때 반복문이 즉시 중단되고 제어 흐름이 반복문 아래 첫 번째 줄로 이동
while (true) {

  let value = +prompt("숫자를 입력하세요.", '');

  if (!value) break; // (*)

  sum += value;

}
alert( '합계: ' + sum );

/*------------------------------------------------*/

// continue는 현재 반복을 종료시키고 다음 반복으로 넘어가고 싶을 때 사용
for (let i = 0; i < 10; i++) {

    // 조건이 참이라면 남아있는 본문은 실행되지 않습니다.
    if (i % 2 == 0) continue;
  
    alert(i); // 1, 3, 5, 7, 9가 차례대로 출력됨
}

/*------------------------------------------------*/

// 위쪽에 있는 예시와 동일
// continue를 사용하는 대신 코드를 if 블록으로 감싼 점만 다름

for (let i = 0; i < 10; i++) {

    if (i % 2) {
      alert( i );
    }
  
}

/*------------------------------------------------*/

// 표현식이 아닌 문법 구조(syntax construct)는 삼항 연산자 ?에 사용할 수 없음
// 특히 break나 continue 같은 지시자는 삼항 연산자에 사용하면 안 됨
if (i > 5) {
    alert(i);
} 
else {
    continue;
}

// 물음표를 사용해서 위 조건문을 아래와 같이 바꾸려는 시도를 할 수 있음

(i > 5) ? alert(i) : continue; // 여기에 continue를 사용하면 안 됨.
// 이런 코드는 문법 에러를 발생
// 이는 물음표 연산자 ?를 if문 대용으로 쓰지 말아야 하는 이유 중 하나

/*------------------------------------------------*/
