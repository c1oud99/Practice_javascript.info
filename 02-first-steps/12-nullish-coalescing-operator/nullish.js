/*------------------------------------------------*/

// nullish 병합 연산자 ??없이 x = a ?? b와 동일한 동작을 하는 코드
x = (a !== null && a !== undefined) ? a : b;

/*------------------------------------------------*/

let firstName = null;
let lastName = null;
let nickName = "바이올렛";

// null이나 undefined가 아닌 첫 번째 피연산자
alert(firstName ?? lastName ?? nickName ?? "익명의 사용자"); // 바이올렛

/*------------------------------------------------*/

// ??는 변수에 기본값을 할당하는 용도로 사용
// height가 null이나 undefined인 경우, 100을 할당
height = height ?? 100;

/*------------------------------------------------*/

let height = 0;

alert(height || 100); // 100
alert(height ?? 100); // 0

/*------------------------------------------------*/

let height1 = null;
let width = null;

// ??는 =와 ? 보다는 먼저, 대부분의 연산자보다는 나중에 평가
// 괄호를 추가!
let area = (height1 ?? 100) * (width ?? 50);

alert(area); // 5000

/*------------------------------------------------*/

// *가 ??보다 우선순위가 높기 때문에 *가 먼저 실행
// 원치 않는 결과
let area = height ?? (100 * width) ?? 50;

/*------------------------------------------------*/

// 안정성 관련 이슈 때문에 ??는 &&나 ||와 함께 사용하지 못함
let x = 1 && 2 ?? 3; // SyntaxError: Unexpected token '??'

/*------------------------------------------------*/

// 제약을 피하려면 괄호를 사용

let x = (1 && 2) ?? 3; // 제대로 동작
alert(x); // 2

/*------------------------------------------------*/

